<?xml version="1.0" encoding="UTF-8"?>

<project name="h5jsbuilder" basedir="." default="build">
	<property name="webappdir" value="src/main/webapp" />
	<property name="archivesDir" value="${webappdir}/archives" />
	<property name="releaseDir" value="${archivesDir}/current" />

	<property name="webapp.root.dir" value="src/main/webapp" />
	<property name="web-inf.dir" value="${webapp.root.dir}/WEB-INF" />
	<property name="lib.tool.dir" value="${basedir}/jstool" />
	<property name="lib.project.dir" value="./lib" />

	<property name="configBaseDir" value="${basedir}/config/build" />
	<property name="constructionFile" value="h5-file-construction.xml"/>
	<property name="jsTempFile" value="template/h5.vm" />
	<property name="ejsTempFile" value="template/ejs-header.vm" />
	<property name="cssTempFile" value="template/h5css.vm" />
	<property name="minHeaderFile" value="template/min-header.vm" />

	<path id="base.path">
		<fileset dir="${lib.project.dir}" includes="**/*.jar" />
	</path>

	<taskdef name="jscomp" classname="com.google.javascript.jscomp.ant.CompileTask" classpathref="base.path" />
	<taskdef name="buildService" classname="com.htmlhifive.sourcebuilder.ant.BuilderServiceTask" classpathref="base.path" />


	<target name="all" depends="build, jscoverage" />

	<target name="cleanCurrent">
		<delete>
			<fileset dir="${archivesDir}/current">
				<include name="**" />
			</fileset>
		</delete>
	</target>

	<target name="getVersion">
		<input message="バージョン番号を入力してください。(ex. 1.0.1)" addproperty="versionNumber" />
		<condition property="isCorrectNumber">
			<matches pattern="[0-9]+\.[0-9]+\.[0-9]+" string="${versionNumber}" />
		</condition>
		<fail unless="isCorrectNumber" message="正しいバージョン番号を入力してください。" />
		<touch file="${archivesDir}/current/${versionNumber}" />
	</target>


	<target name="build" depends="prepare,cleanCurrent,getVersion,getGitHash">
		<buildService>
			<buildParameter
				tempFileFlag="false"
				templateEngineFileName="ejs-h5mod.js"
				cssReleaseFileName="h5.css"
				jsReleaseFileName="h5.js"
				jsDevFileName="h5.dev.js"
				jsSrcDir="src/main/webapp/src"
				cssSrcDir="src/main/webapp/srcCss"
				templateEngineSrcDir="src/main/webapp/src/ejs"
				destDir="${releaseDir}"
				version="${versionNumber}"
				templateEngineVersion="1.0"
				configBaseDir="${configBaseDir}"
				jsTemplateFileName="${jsTempFile}"
				cssTemplateFileName="${cssTempFile}"
				minHeaderFileName="${minHeaderFile}"
				templateEngineFile="${ejsTempFile}"
				constructionFileName="${constructionFile}"
				templateEngineSrcFileName= "ejs-1.0.js"
				modules="util,async,cls,event,resource,controller,dataModel,modelWithBinding,view,ui,api.geo,api.sqldb,api.storage,scene,validation" />
			<velocityParameter name="gitCommitId" value="${gitCommitId}" />
		</buildService>
	</target>

	<target name="getNightlyVersion">
		<tstamp>
			<format property="nightly.version"  pattern="yyyy-MM-dd_HH-mm-ss-SSS" />
		</tstamp>
		<touch file="${archivesDir}/current/NIGHTLY" />
	</target>

	<target name="build-nightly" depends="prepare,cleanCurrent,getNightlyVersion,getGitHash">
		<buildService>
			<buildParameter
				tempFileFlag="false"
				templateEngineFileName="ejs-h5mod.js"
				cssReleaseFileName="h5.css"
				jsReleaseFileName="h5.js"
				jsDevFileName="h5.dev.js"
				jsSrcDir="src/main/webapp/src"
				cssSrcDir="src/main/webapp/srcCss"
				templateEngineSrcDir="src/main/webapp/src/ejs"
				destDir="${releaseDir}"
				version="Nightly_${nightly.version}"
				templateEngineVersion="1.0"
				configBaseDir="${configBaseDir}"
				jsTemplateFileName="${jsTempFile}"
				cssTemplateFileName="${cssTempFile}"
				minHeaderFileName="${minHeaderFile}"
				templateEngineFile="${ejsTempFile}"
				constructionFileName="${constructionFile}"
				templateEngineSrcFileName= "ejs-1.0.js"
				modules="util,async,cls,event,resource,controller,dataModel,modelWithBinding,view,ui,api.geo,api.sqldb,api.storage,scene,validation" />
			<velocityParameter name="gitCommitId" value="${gitCommitId}" />
		</buildService>
	</target>

	<target name="jsdoc">
		<delete dir="${webappdir}/doc" />
		<mkdir dir="${webappdir}/doc" />
		<copy todir="${webappdir}/doc">
			<fileset dir="jstool/jsdoc/hifive-apidoc-tmpl/static"/>
		</copy>
		<exec executable="cmd" dir="jstool/jsdoc">
			<arg line="/C jsdoc.bat" />
		</exec>
	</target>

	<target name="jscoverage">
		<delete dir="${webappdir}/coverage" />
		<exec executable="cmd" dir="jstool/jscoverage">
			<arg line="/C inst.bat" />
		</exec>
	</target>


	<target name="getGitHash">
		<property name="git.dir" value="../.git/logs/HEAD" />
		<available file="${git.dir}" property="git.exists" />
		<fail unless="git.exists" message="${git.dir}が存在しません" />
		<loadfile srcfile="${git.dir}" property="gitCommitId">
			<filterchain>
				<tailfilter lines="1" />
				<replaceregex pattern="[A-z0-9]+ ([A-z0-9]+) .+" replace="\1" />
			</filterchain>
		</loadfile>
		<echo message="gitCommitId: ${gitCommitId}" />
	</target>

	<target name="prepare">
		<mkdir dir="${releaseDir}" />
	</target>
</project>